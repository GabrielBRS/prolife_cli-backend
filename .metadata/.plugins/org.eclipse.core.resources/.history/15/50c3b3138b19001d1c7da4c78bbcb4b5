package com.gabrielsousa.prolife.domain;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import java.util.stream.Collectors;

import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gabrielsousa.prolife.domain.enums.UsersTypes;

@Entity
public class Users implements Serializable{
	private static final long serialVersionUID = 1L;
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer id;
	
	private String name;
	
	@Column(unique=true)
	private String email;
	
	private String cpf;
	
	private Integer userType;
	
	@ElementCollection(fetch=FetchType.EAGER)
	@CollectionTable(name="PERFIS")
	private Set<Integer> perfis = new HashSet<>();
	
	@JsonIgnore
	private String password;
	
	public Users() {
		addUserType(UsersTypes.CLIENT);
	}
	
	public Set<UsersTypes> getPerfis() {	
		return perfis.stream().map(x-> UsersTypes.toEnum(x)).collect(Collectors.toSet());
	}
	
	public void setPerfis(Set<Integer> usersTypes) {
		this.perfis = usersTypes;
	}
	
	public void addUserType(UsersTypes usersTypes) {
		perfis.add(usersTypes.getCod());
	}
}
